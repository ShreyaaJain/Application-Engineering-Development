/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.DoctorRole;

import Business.Enterprise.CareTakerEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CareTakerOrganization;
import Business.Organization.Organization;
import Business.Prescription.Prescription;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReceptionistWorkRequest;
import com.db4o.foundation.StopWatch;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class PrescribeMedicineJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount doctor;
    private ReceptionistWorkRequest request;
    private Network network;

    /**
     * Creates new form ProcessWorkRequestWorkJPanel
     */
    /*public PrescribeMedicineJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.network = network;
        valueLabel.setText(enterprise.getName());

        populateCareTakerComboBox();
    }*/

    public PrescribeMedicineJPanel(JPanel userProcessContainer,UserAccount doctor, ReceptionistWorkRequest request, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.network = network;
        this.doctor = doctor;
        populateCareTakerComboBox();
        //valueLabel.setText(enterprise.getName());
        refereshTable();
        
    }

    public void populateCareTakerComboBox() {

        careTakerJComboBox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof CareTakerEnterprise) {

                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof CareTakerOrganization) {
                        for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()) {
                            careTakerJComboBox.addItem(userAccount);
                        }
                    }
                }
            }
        }
    }
    
    private void refereshTable(){
        int rowCount = PrescriptionJTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel) PrescriptionJTable.getModel();
        for(int i=rowCount-1;i>=0;i--){
            model.removeRow(i);
        }
        for(Prescription prescription: request.getPatient().getPrescriptionList()){
        
            int dosage = prescription.getDosage();
            String name = prescription.getName();
            //Date date;
            SimpleDateFormat formatter = new SimpleDateFormat("hh:mm");
            String date = formatter.format(prescription.getTime());
            
            Object row[] = {name, dosage, date};
            ((DefaultTableModel) (PrescriptionJTable.getModel())).addRow(row);
        }
        
        
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        careTakerJComboBox = new javax.swing.JComboBox();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDosage = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PrescriptionJTable = new javax.swing.JTable();

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setText("Submit Result");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Medicine Name");

        jLabel2.setText("Assign a CareTaker");

        careTakerJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        careTakerJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                careTakerJComboBoxActionPerformed(evt);
            }
        });

        valueLabel.setText("<value>");

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        jLabel3.setText("Dosage (mg)");

        jLabel4.setText("Times to take in a day");

        txtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeActionPerformed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        PrescriptionJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Medicine Name", "Dosage", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PrescriptionJTable);
        if (PrescriptionJTable.getColumnModel().getColumnCount() > 0) {
            PrescriptionJTable.getColumnModel().getColumn(0).setResizable(false);
            PrescriptionJTable.getColumnModel().getColumn(1).setResizable(false);
            PrescriptionJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addComponent(jLabel2))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submitJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(careTakerJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(resultJTextField)
                            .addComponent(txtDosage)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(valueLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDosage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(addBtn)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(33, 33, 33)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(careTakerJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(submitJButton)))
                .addGap(68, 68, 68))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) PrescriptionJTable.getModel();
        
        for (int i = 0; i < model.getRowCount(); i++ ){
            
                String name = (String) model.getValueAt(i, 0);
                int dosage = (int) model.getValueAt(i, 1);
                int time = (int) model.getValueAt(i, 2);
                //SimpleDateFormat formatter = new SimpleDateFormat("hh:mm");
                //date = formatter.parse((String) model.getValueAt(i, 2));
                //Date date = (Date) model.getValueAt(i, 2);
                
                Prescription prescription  = new Prescription(name, dosage, time);
                request.getPatient().addPrescription(prescription);
            
        }
        
        JOptionPane.showMessageDialog(this, "CareTaker Assigned!!", "Update", JOptionPane.INFORMATION_MESSAGE);
        UserAccount userAccount;
        userAccount = (UserAccount) careTakerJComboBox.getSelectedItem();
        request.getPatient().setCareTaker(userAccount);
        userAccount.toString();
        request.getPatient().setDoctor(doctor);
        userAccount.addPatient(request.getPatient());
        request.setResult("Completed");
        
       
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void txtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        //try {
            // TODO add your handling code here:
            
            int dosage = Integer.parseInt(txtDosage.getText().trim());
            String name = resultJTextField.getText().trim();
            //String date = txtTime.getText().trim();
            int time = Integer.parseInt(txtTime.getText().trim());
            Object row[] = {name, dosage, time};
            ((DefaultTableModel) (PrescriptionJTable.getModel())).addRow(row);
            
            JOptionPane.showMessageDialog(this, "Medicine added!!", "Update", JOptionPane.INFORMATION_MESSAGE);
            clearFields();
        /*} catch (ParseException ex) {
            Logger.getLogger(PrescribeMedicineJPanel.class.getName()).log(Level.SEVERE, null, ex);}*/
        
               
    }
            
            private void clearFields() {
                txtDosage.setText("");
                txtTime.setText("");
                resultJTextField.setText("");
                
    }//GEN-LAST:event_addBtnActionPerformed

    private void careTakerJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_careTakerJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_careTakerJComboBoxActionPerformed
     
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PrescriptionJTable;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox careTakerJComboBox;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField resultJTextField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField txtDosage;
    private javax.swing.JTextField txtTime;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
